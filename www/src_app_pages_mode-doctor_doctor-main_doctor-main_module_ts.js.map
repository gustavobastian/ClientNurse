{"version":3,"file":"src_app_pages_mode-doctor_doctor-main_doctor-main_module_ts.js","mappings":"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","sources":["./src/app/pages/mode-doctor/doctor-main/doctor-main-routing.module.ts","./src/app/pages/mode-doctor/doctor-main/doctor-main.module.ts","./src/app/pages/mode-doctor/doctor-main/doctor-main.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DoctorMainPage } from './doctor-main.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DoctorMainPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DoctorMainPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DoctorMainPageRoutingModule } from './doctor-main-routing.module';\n\nimport { DoctorMainPage } from './doctor-main.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    DoctorMainPageRoutingModule\n  ],\n  declarations: [DoctorMainPage]\n})\nexport class DoctorMainPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LocalStorageService } from '../../../services/local-storage.service';\nimport { UserService } from '../../../services/user.service';\nimport { User } from '../../../models/user';\nimport { Bed } from '../../../models/bed';\nimport { PatientsTable } from '../../../models/patientsTable';\nimport { BedsService } from '../../../services/beds.service';\nimport { MessageModel } from '../../../models/message-model';\nimport { MqttService } from '../../../services/mqtt.service';\nimport { Directory, Filesystem } from '@capacitor/filesystem';\nimport { RecordingData, VoiceRecorder } from 'capacitor-voice-recorder';\nimport { bedStats } from 'src/app/models/bed-status';\n\n@Component({\n  selector: 'app-doctor-main',\n  templateUrl: './doctor-main.page.html',\n  styleUrls: ['./doctor-main.page.scss'],\n})\nexport class DoctorMainPage implements OnInit {\n  private  localDoctor: User= new User(0,\"\",\"\",\"\",\"\",0,\"\");\n  private bedlocal: Bed = new Bed(0,0,0,0);\n  private doctorId: number;\n  private doctorName: string;\n  private patientNumber: number;\n  private newMessage=false;\n  private messages: Array<MessageModel> = new Array;\n  messagesbeds: Array<bedStats> = new Array;\n  messagesbedsfiltered: Array<string> = new Array;      \n  private patientTable: Array<PatientsTable> = new Array;\n  private textResponse: string=\"\"  ;\n  private recording = false;\n  private duration= 0;\n  private patientActivated=false\n  private viewMode=0\n  \n  //storedFileNames=[];\n  bedstates = [\"Desocupada\",\"Descansando\",\"Llamando\",\"Por ser atendido\",\"Siendo atendido\",\"Llamada programada\",\"Solicito Ayuda\"]\n  constructor(private router:Router,\n    private activatedRoute: ActivatedRoute,\n    public localSto: LocalStorageService,        \n    public MQTTServ:MqttService,\n    public userServ: UserService\n    ) { \n    //this.doctorId = parseInt( this.activatedRoute.snapshot.paramMap.get(\"id\"));\n    this.doctorName=\"\";\n    this.newMessage==false;\n    \n  }\n\n  async ngOnInit() {\n   VoiceRecorder.requestAudioRecordingPermission(); \n   this.newMessage==false;\n   await this.getParams();\n   await this.getBeds();\n   //subscription for audio\n   //await this.subscribe();\n   //await this.waiting(); \n   await this.eventsSubscription();\n   \n   \n  }\n  onClickPatientNote(id:number){    \n    this.router.navigate(['/doctor-patients/'+this.patientNumber]);        \n  }\n  onClickMessages(){    \n    this.router.navigate(['/doctor-messages/'+this.doctorId]);        \n  }\n  /**\n   * Getting the parameters of the user from the local storage\n   */\n   async getParams() {\n    this.localDoctor=this.userServ.getUser();\n    this.doctorName = this.localDoctor.username;   \n    \n   }\n   /***\n    * for example\n    */\n  \n  public async subscribe(){\n  await this.MQTTServ.MQTTClientLocal.subscribe(\"/audio/recording\");\n  }\n \n   /***\n    * getting list of pacients and beds\n    */\n    \n    async getBeds() {\n    let  responseInfoTopic=\"/User/\"+this.localDoctor.userId+\"/Pacients\";\n    await this.MQTTServ.MQTTClientLocal.subscribe(responseInfoTopic).on(Message=>{\n        let localMessage = JSON.parse(Message.string);\n        if(Message.toString()==\"Error\"){this.MQTTServ.MQTTClientLocal.unsubscribe(responseInfoTopic);}              \n        else{\n        //console.log(localMessage);\n        localMessage.forEach(element => {\n          this.patientTable.push(element);\n        });\n        //this.patientTable=localMessage;\n        console.log(JSON.stringify(this.patientTable))\n        this.MQTTServ.MQTTClientLocal.unsubscribe(responseInfoTopic)\n       // console.log(JSON.stringify(this.pacientTable=localMessage));\n        this.MQTTServ.sendMesagge(responseInfoTopic, \"\");\n       this.listenMessages();\n      }\n        \n      })    \n\n   // console.log(\"Doctor logged id:\"+this.localDoctor.userId)  \n    let a=new MessageModel(this.localDoctor.username,JSON.stringify(this.localDoctor.userId),  0, 9);    \n   // console.log(a)\n    let mqttmessage=JSON.stringify(a);\n   // console.log(mqttmessage);\n    let topic=\"/User/general\";\n    await this.MQTTServ.sendMesagge(topic, mqttmessage);\n  }\n\n/**\n   * Subscription for receiving messages\n   * of the status of the beds   \n   */\n eventsSubscription(){\n    \n  let topic=\"/Beds/status\";\n  let receivedMessage;\n  console.log(\"status subscribed\")\n  this.MQTTServ.MQTTClientLocal.subscribe(topic).on(async Message=>{\n  //  console.log(\"received\")\n  //  console.log(Message.string);            \n  let localMessage = JSON.parse(Message.string);      \n  let local2=Message.string;\n  //console.log(localMessage[0].message);    \n  this.messagesbeds=[];\n  this.messagesbedsfiltered=[];\n  if(this.viewMode==2){\n    await localMessage.forEach(element => {      \n      {     \n            this.patientTable.forEach(patientT => {          \n              if(element.id==patientT.bedId)  {\n                console.log(\"find\")\n                let local={'bedId':patientT.bedId,'pacientId':patientT.pacientId,'st':element.st}\n                let localj=JSON.parse((JSON.stringify(local)))\n                \n                this.messagesbedsfiltered.push(localj);             \n                }\n                })\n      \n        }\n      }\n    );\n   } \n\n  \n  });\n}\n\n  /**\n   * logout\n   */\n   public logout(){\n    console.log(\"logging out\");\n    console.log(\"name:\"+this.localDoctor.username);\n   let question=\"logout\";\n      \n   let a=new MessageModel(this.localDoctor.username, question, 0, 2);    \n   console.log(JSON.stringify(a));\n   let mqttmessage=(a).toString();\n  // console.log(mqttmessage);\n   let topic=\"/User/general\";\n   this.MQTTServ.sendMesagge(topic, JSON.stringify(a));  \n   \n   //App.exitApp();   //this will close all services\n   this.router.navigate(['/home/']);       \n  }\n\n\n  /**\n * \n * @param \n */\n    public async listenMessages(){\n   // console.log(\"El usuario es:\"+this.localDoctor.userId)\n    //\n    //console.log(\"aqui:\"+this.pacientTable.length)\n    let topic=\"/User/\"+this.localDoctor.userId+\"/questions/\";\n\n    this.patientTable.forEach(element => {\n    //console.log(JSON.stringify(element)) ; \n    topic=\"/User/\"+this.localDoctor.userId+\"/questions/\"+element.bedId;\n    console.log(\"topic: \"+topic)    \n    this.MQTTServ.MQTTClientLocal.subscribe(topic).on(Message=>{\n        let localMessage = JSON.parse(Message.string);\n        if(Message.toString()==\"Error\"){this.MQTTServ.MQTTClientLocal.unsubscribe(topic+\"#\");}      \n        //console.log(\"respuestaSystem2:  \"+localMessage[0].lastName);\n        console.log(\"here doc listening\");       \n                    \n        let receivedMessage = new MessageModel(localMessage._username,localMessage._content,localMessage._bedId,localMessage._type);\n          console.log(\"Recibido por doc\");\n          \n          this.messages.push(receivedMessage);    \n          this.newMessage=true;        \n          //this.MQTTServ.sendMesagge(topic, \" \");  \n      })\n      \n    });\n    \n   \n  }\n\n  onChangeText(text:string){\n    this.textResponse=text;\n    //console.log(this.textResponse);\n  }\n\n  sendResponseText(id:number){\n    //console.log((this.patientTable[id].pacientId));\n    let topic=\"/User/\"+this.localDoctor.userId+\"/answers/\"+id;\n    console.log(topic);\n    let a=new MessageModel(this.localDoctor.username,this.textResponse, id, 7);    \n    let mqttmessage=JSON.stringify(a);\n    console.log(\"sending:\",mqttmessage);    \n    this.MQTTServ.sendMesagge(topic, mqttmessage);  \n    this.messages.splice(id,1);  \n  }\n  sendAudioText(response:string, id:number){\n    let topic=\"/User/\"+this.localDoctor.userId+\"/answers/\"+id;\n    let a=new MessageModel(this.localDoctor.username,response,  this.patientTable[id].bedId, 27);    \n    let mqttmessage=JSON.stringify(a);    \n    this.MQTTServ.sendMesagge(topic, mqttmessage);\n  }\n\n  upgradingPatientNumber(id:number){\n    this.patientNumber=id;\n    this.patientActivated=true;\n  }\n\n  async playFile(fileName: string){\n    const audioFile= await Filesystem.readFile({\n      path: 'audios/'+fileName,\n      directory: Directory.Documents//Data\n    })\n    const base64Sound=audioFile.data;\n    const audioRef = new Audio(`data:audio/aac;base64,${base64Sound}`);\n    audioRef.oncanplaythrough = () => audioRef.play();\n    audioRef.load();\n  }\n\n  async playString(data: string){\n    \n    const base64Sound=data;\n    const audioRef = new Audio(`data:audio/aac;base64,${base64Sound}`);\n    audioRef.oncanplaythrough = () => audioRef.play();\n    audioRef.load();\n  }\n\n/**\n * recording audio\n */\n startRecording() {\n  console.log(\"startin recording\")  \n  if(this.recording){return;     }\n  this.recording=true;  \n  VoiceRecorder.startRecording();\n  this.calculateDuration();\n}\n\ncalculateDuration(){\n  if(!this.recording){this.duration=0;return;}  \n  this.duration+=1;\n  setTimeout(()=>{\n  this.calculateDuration();\n  },1000);\n}  \nasync stopRecording( id:number) {\n  console.log(\"stopping recording\")\n  let topic=\"/User/\"+this.localDoctor.userId+\"/answers/\"+id;\n  \n  this.recording=false;\n  VoiceRecorder.stopRecording().then(\n    async (result: RecordingData) => {\n      if(result.value&&result.value.recordDataBase64){\n        console.log(\"sending recording\")\n        const recorData = result.value.recordDataBase64;        \n        let a=new MessageModel(this.localDoctor.username,result.value.recordDataBase64,  id, 22);    \n          let mqttmessage=JSON.stringify(a);    \n         await this.MQTTServ.sendMesagge(topic, mqttmessage);\n          console.log(\"recording sent\")\n      };\n      }\n    \n  );\n}\n\nasync enablingPatientMonitoring(){\n  this.viewMode=2;\n}\nasync enablingNotes(){\n  this.viewMode=1;\n}\nasync enablingListen(){\n  this.viewMode=3;\n}\n \nasync deleteMsg(id:number){\n  this.messages.splice(id, 1);\n  //console.log(\"mensajes:\"+this.messages.length);\n  if(this.messages.length<1){\n    console.log(\"no hay mensajes para responder\")\n    this.newMessage=false;\n  }\n}\n\n}\n"],"names":[],"sourceRoot":"webpack:///"}