{"version":3,"file":"src_app_doctor-pacients_doctor-pacients_module_ts.js","mappings":"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","sources":["./src/app/doctor-pacients/doctor-pacients-routing.module.ts","./src/app/doctor-pacients/doctor-pacients.module.ts","./src/app/doctor-pacients/doctor-pacients.page.ts","./src/app/models/note.ts","./src/app/models/pacient.ts","./src/app/services/pacient.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DoctorPacientsPage } from './doctor-pacients.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DoctorPacientsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DoctorPacientsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DoctorPacientsPageRoutingModule } from './doctor-pacients-routing.module';\n\nimport { DoctorPacientsPage } from './doctor-pacients.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    DoctorPacientsPageRoutingModule\n  ],\n  declarations: [DoctorPacientsPage]\n})\nexport class DoctorPacientsPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Pacient } from '../models/pacient';\nimport { LocalStorageService } from '../services/local-storage.service';\nimport { Storage } from '@capacitor/storage';\nimport { PacientService } from '../services/pacient.service';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { Note } from '../models/note';\nimport { MessageModel } from '../models/message-model';\nimport { MqttService } from '../services/mqtt.service';\n\n@Component({\n  selector: 'app-doctor-pacients',\n  templateUrl: './doctor-pacients.page.html',\n  styleUrls: ['./doctor-pacients.page.scss'],\n})\nexport class DoctorPacientsPage implements OnInit {\n  notes: Array<Note> = new Array;\n  doctorId: number;\n  doctorName: string;\n  showNotes: boolean = false;\n  showNotesForm: boolean = false;\n\n\n  public pacientLocal: Pacient= new Pacient(0,\"Gus\",\"Bas\",0,0,0);\n\n  numberId: FormGroup = new FormGroup({\n    pacientNumber: new FormControl(),    \n  });\n\n  noteForm: FormGroup = new FormGroup({\n    noteFormString: new FormControl(),    \n  });\n\n  \n  constructor(private activatedRoute: ActivatedRoute, \n    public formBuilder: FormBuilder,\n    public localSto: LocalStorageService, \n    private pacientServ:PacientService,\n    public MQTTServ:MqttService,\n    ) {\n    this.doctorId = parseInt( this.activatedRoute.snapshot.paramMap.get(\"id\"));\n    this.doctorName=\"\";\n   }\n\n  ngOnInit() {\n    this.getParams();\n    console.log(JSON.stringify(this.pacientLocal));\n    this.pacientLocal.firstName= \"Gus\";\n    this.pacientLocal.lastName= \"Bas\";    \n    this.pacientLocal.id = 0;\n    //making 2 notes\n    let nota1: Note= new Note(1,\"ahora me despierto\",\"active\");\n    let nota2: Note= new Note(2,\"ahora me acuesto\",\"active\");\n    \n\n    //this.pacientServ.oneAsk(this.doctorId);\n  }\n/**\n   * Getting the parameters of the user from the local storage\n   */\n async getParams() {\n  let { value } = await Storage.get({ key: 'username' });      \n  this.doctorName=value.toString();\n  console.log(this.doctorName);\n}\n async onClick() {\n  let local=(this.numberId.value);    \n  console.log(local);\n  this.pacientLocal.id = local.pacientNumber;\n  this.showNotes = true;\n  this.pacientServ.oneAsk(local.pacientNumber);\n\n  let responseNoteTopic=\"/Pacient/\"+this.pacientLocal.id+\"/notes\";  \n  this.MQTTServ.MQTTClientLocal.subscribe(responseNoteTopic).on(Message=>{\n    console.log(\"respuestaSystem:  \"+Message.toString());\n    console.log(\"recibo nota\")\n    //let localMessage = JSON.parse(Message[0].string);      \n    let localMessage = JSON.parse(Message.string);\n    let note1 =  JSON.parse(JSON.stringify(localMessage[0]));     \n    let note2 =  JSON.parse(JSON.stringify(localMessage[1]));     \n    \n    let notaLocal1: Note= new Note(note1.notesId,note1.note,note1.state);\n    let notaLocal2: Note= new Note(note2.notesId,note2.note,note2.state);\n    this.notes.push(notaLocal1);\n    this.notes.push(notaLocal2);\n    \n    this.MQTTServ.MQTTClientLocal.unsubscribe(responseNoteTopic)\n  })\n\n  let responseInfoTopic=\"/Pacient/\"+this.pacientLocal.id+\"/info\";  \n  this.MQTTServ.MQTTClientLocal.subscribe(responseInfoTopic).on(Message=>{\n      let localMessage = JSON.parse(Message.string);      \n      //console.log(\"respuestaSystem2:  \"+localMessage[0].lastName);\n      this.pacientLocal.lastName = localMessage[0].lastName;\n      this.pacientLocal.firstName = localMessage[0].firstName;      \n      this.MQTTServ.MQTTClientLocal.unsubscribe(responseInfoTopic)\n    })  \n\n    let a=new MessageModel(this.doctorName,JSON.stringify(this.pacientLocal.id),  0, \"0\",2);    \n    console.log(a)\n    let mqttmessage=JSON.stringify(a);\n    console.log(mqttmessage);\n    let topic=\"/User/general\";\n  await this.MQTTServ.sendMesagge(topic, mqttmessage);\n  let b=new MessageModel(this.doctorName,JSON.stringify(this.pacientLocal.id),  0, \"0\",5);\n  mqttmessage=JSON.stringify(b);    \n  await this.MQTTServ.sendMesagge(topic, mqttmessage);\n\n  \n\n }\n onClickAdd() {\n  let local=(this.numberId.value);    \n  console.log(local);\n  this.showNotes = false;\n  this.showNotesForm = true;\n  this.pacientLocal.id = local.pacientNumber;  \n }\n onClickVolver() {\n  let local=(this.numberId.value);    \n  console.log(local);\n  this.showNotes = true;\n  this.showNotesForm = false;\n  this.pacientLocal.id = local.pacientNumber;  \n }\n onClickEnviar() {\n  let local=(this.noteForm.value);    \n  console.log(local.noteFormString);\n  /*let local=(this.numberId.value);    \n  console.log(local);\n  this.showNotes = false;\n  this.showNotesForm = true;\n  this.pacientLocal.id = local.pacientNumber;  */\n }\n}\n","export class Note{\n    private _noteId: number;\n    private _note: string;\n    private _state:string;\n\n    constructor(noteId: number, note: string, state:string){\n        this._noteId = noteId;\n        this._note= note;\n        this._state=state;\n    }\n\n    public set noteId(noteId: number){\n        this._noteId = noteId;\n    }\n    public set note(note: string){\n        this._note= note;\n    }\n    public set state(state:string){\n        this._state= state;\n    }\n    public get noteId(): number{\n        return this._noteId;\n    };\n\n    public get note(): string{\n        return this._note;\n    };\n    public get state(): string{\n        return this._state;\n    }\n\n}","export class Pacient{\n    public _id: number;\n    public _firstName: string;\n    public _lastName: string;\n    public _bedId: number;\n    public _notesTableId: number;\n    public _userTableId: number;\n\n    constructor(pacientId: number, pacientFirstName: string, pacientLastName: string, bedId: number, notesTableId: number, userTableId: number){\n        this._id= pacientId;\n        this._firstName= pacientFirstName;\n        this._lastName= pacientLastName;\n        this._bedId= bedId;\n        this._notesTableId= notesTableId;\n        this._userTableId= userTableId;\n    }\n\n    public set id(pacient:number){\n        this._id=pacient;\n    }\n    public get id():number{\n        return this._id;\n    }\n\n    public set firstName(pacient:string){\n        this._firstName=pacient;\n    }\n    public get firstName():string{\n        return this._firstName;\n    }\n    public set lastName(pacient:string){\n        this._lastName=pacient;\n    }\n    public get lastName():string{\n        return this._lastName;\n    }\n    public set bedId(pacient: number){\n        this._bedId=pacient;\n    }\n    public get bedId():number{\n        return this._bedId;\n    }\n    public set notesTableId(number: number){\n        this._notesTableId=number;\n    }\n    public get notesTableId():number{\n        return this._notesTableId;\n    }\n    public set userTableId(number: number){\n        this._userTableId=number;\n    }\n    public get userTableId():number{\n        return this._userTableId;\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { Pacient } from '../models/pacient';\nimport { MqttService } from './mqtt.service';\nimport {Client, connect} from 'rsup-mqtt'\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PacientService {\n  doctorId: number;\n  pacients: Array<Pacient>= new Array;\n  pacient: Pacient;\n\n  constructor(public MQTTServ: MqttService) { \n    \n    \n  }\n  //not used\n  getAllPacients(): Array<Pacient> {\n    return ;\n  }\n  \n\n  oneAsk(i:number){\n    \n    console.log(\"asking\");\n    let topic=\"general2\";\n    console.log\n    this.MQTTServ.sendMesagge(topic, \"aqui estamos\"+i);\n  }\n  getPacientInfo(i:number): Promise<Pacient> {\n    return ;\n  }\n\n}\n"],"names":[],"sourceRoot":"webpack:///"}