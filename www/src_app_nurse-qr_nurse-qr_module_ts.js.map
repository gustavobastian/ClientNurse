{"version":3,"file":"src_app_nurse-qr_nurse-qr_module_ts.js","mappings":"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","sources":["./src/app/models/bed.ts","./src/app/models/message-model.ts","./src/app/models/user.ts","./src/app/nurse-qr/nurse-qr-routing.module.ts","./src/app/nurse-qr/nurse-qr.module.ts","./src/app/nurse-qr/nurse-qr.page.ts","./src/app/services/beds.service.ts","./src/app/services/mqtt.service.ts","./src/app/services/user.service.ts","./node_modules/@capacitor-community/barcode-scanner/dist/esm/definitions.js","./node_modules/@capacitor-community/barcode-scanner/dist/esm/index.js"],"sourcesContent":["export class Bed{\n    private _bedId: number;\n    private _roomId: number;\n    private _callerId: number;\n    private _floorId: number;\n\n    constructor(bedId: number, roomId: number, callerId: number, floorId: number){\n        this._bedId= bedId;\n        this._callerId= callerId;\n        this._floorId= floorId;\n        this._roomId= roomId;\n    } \n\n    public get bedId(){\n        return this._bedId;\n    }\n    public get roomId(){\n        return this._roomId;\n    }\n    public get floorId(){\n        return this._floorId;\n    }\n    public get callerId(){\n        return this._callerId;\n    }\n\n    public set bedId(bedId: number){\n        this._bedId = bedId;\n    }\n    public set callerId(callerId: number){\n        this._callerId = callerId;\n    }\n    public set floorId(floorId: number){\n        this._floorId = floorId;\n    }\n    public set roomId(roomId: number){\n        this._roomId = roomId;\n    }\n    \n}","export class MessageModel{\n    private _username: string;    \n    private _content: string;\n    private _bedId: number;\n    private _time: string;\n    private _type: number;\n\n    constructor(userName: string, content: string, bedId: number, time: string, type: number){\n        this._username= userName;\n        this._content= content;\n        this._bedId= bedId;\n        this._time= time;\n        this._type= type;\n    } \n\n    public get username(){\n        return this._username;\n    }\n    public get content(){\n        return this._content;\n    }\n    public get bedId(){\n        return this._bedId;\n    }\n    public get time(){\n        return this._time;\n    }\n    public get type(){\n        return this._type;\n    }\n\n    public set username(username: string){\n        this._username = username;\n    }\n    public set content(content: string){\n        this._content = content;\n    }\n    public set bedId(bedId: number){\n        this._bedId = bedId;\n    }\n    public set time(time: string){\n        this._time = time;\n    }\n    public set type(type: number){\n        this._type = type;\n    }\n    \n}\n","export class User{\n    private _userId: number;\n    private _username: string;\n    private _firstname: string;\n    private _lastname: string;\n    private _occupation: string;\n    private _state: number;\n    private _password: string;\n\n    constructor(userId: number, username: string, firstName: string, lastName: string, occupation: string, state: number, password: string){\n        this._userId = userId;\n        this._username = username;\n        this._firstname= firstName;\n        this._lastname= lastName;\n        this._occupation= occupation;\n        this._state = state;\n        this._password=password;\n    }\n\n    public set userId(value: number){\n        this._userId=value;        \n    }\n    public set username(value: string){\n        this._username= value;\n    }\n    public set firstname(value: string){\n        this._firstname= value;\n    }\n    public set lastname (value: string){\n        this._lastname= value;\n    }\n    public set occupation(value: string){\n        this._occupation= value;\n    }\n    public set state(state: number){\n        this._state= state;\n    }\n    public set password(password: string ){\n        this._password = password;\n    }\n\n\n    public get userId(): number{\n       return this._userId;\n    }\n    public get username(): string{\n       return this._username;\n    }\n    public get firstName():string{\n        return this._firstname;\n    }\n    public get lastName(): string{\n        return this._lastname;\n    }\n    public get occupation(): string{\n        return this._occupation;\n    }\n    public get state(): number{\n        return this._state;\n    }\n    public get password(): string{\n        return this._password;\n    }\n\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { NurseQRPage } from './nurse-qr.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NurseQRPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class NurseQRPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { NurseQRPageRoutingModule } from './nurse-qr-routing.module';\n\nimport { NurseQRPage } from './nurse-qr.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    NurseQRPageRoutingModule\n  ],\n  declarations: [NurseQRPage]\n})\nexport class NurseQRPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MessageModel } from '../models/message-model';\nimport { User } from '../models/user';\nimport { BedsService } from '../services/beds.service';\nimport { LocalStorageService } from '../services/local-storage.service';\nimport { MqttService } from '../services/mqtt.service';\nimport { UserService } from '../services/user.service';\nimport { Platform } from '@ionic/angular';\n\nimport { BarcodeScanner,  SupportedFormat} from '@capacitor-community/barcode-scanner';\n\n\n\n@Component({\n  selector: 'app-nurse-qr',\n  templateUrl: './nurse-qr.page.html',\n  styleUrls: ['./nurse-qr.page.scss'],\n})\nexport class NurseQRPage implements OnInit {\n  private localNurse: User= new User(0,\"\",\"\",\"\",\"\",0,\"\");\n  public bedId = 0;\n  private nurseName=\" \";\n  private nurseId=0;  \n  public showNotes = false;  \n  public capturing = false;  \n  public canCapture = false;\n  public scanActive: boolean = false;  \n  private Platform: Platform;\n\n  public capturedQR :string =\"Coloque aqui\";\n  \n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    public localSto: LocalStorageService,    \n    public MQTTServ:MqttService,\n    public userlogged: UserService,\n    public bedlocal: BedsService,\n    private router:Router,\n    private platform: Platform\n\n  ) {\n    \n    this.bedId = this.bedlocal.getBedId();\n   \n   }\n\n  async ngOnInit() {\n    console.log(\"on QR init\")\n    await this.platform.ready().then(() => {\n      if (this.platform.is('android')) {\n           console.log('android');\n      } else if (this.platform.is('ios')) {\n           console.log('ios');\n      } else {\n           //fallback to browser APIs or\n           console.log('The platform is not supported');\n             }\n      });\n\n      if(this.platform.is('android') || this.platform.is('ios'))\n      {\n        this.canCapture=true;\n        console.log(\"puedo capturar\")   \n        console.log(\"check permisions on android\")\n      const state=await this.checkPermission();\n      if((state)== true){\n        console.log(\" permisos correctos\");\n        return;}\n      else{\n        alert(\"Permission denied\");\n          }    \n         \n      }\n      else{\n        this.canCapture=false;\n        console.log(\"no puedo capturar\")\n      }\n    \n  }\n\n  \n\n/****************************************************************************************************************** */\n/* QR scanner functions\n/****************************************************************************************************************** */\n\n  //check permissions of the camera\n  //from \"https://github.com/capacitor-community/barcode-scanner\"\n   public async didUserGrantPermission() {\n    // check if user already granted permission\n    const status = await BarcodeScanner.checkPermission({ force: false });\n  \n    if (status.granted) {\n      // user granted permission\n      return true;\n    }\n  \n    if (status.denied) {\n      // user denied permission\n      return false;\n    }\n  \n    if (status.asked) {\n      // system requested the user for permission during this call\n      // only possible when force set to true\n    }\n  \n    if (status.neverAsked) {\n      // user has not been requested this permission before\n      // it is advised to show the user some sort of prompt\n      // this way you will not waste your only chance to ask for the permission\n      const c = confirm(\n        'Necesitamos permisos de la camara para realizar el la busqueda de código qr',\n      );\n      if (!c) {\n        return false;\n      }\n    }\n  \n    if (status.restricted || status.unknown) {\n      // ios only\n      // probably means the permission has been denied\n      return false;\n    }\n    // user has not denied permission\n  // but the user also has not yet granted the permission\n  // so request it\n  const statusRequest = await BarcodeScanner.checkPermission({ force: true });\n\n  if (statusRequest.asked) {\n    // system requested the user for permission during this call\n    // only possible when force set to true\n  }\n\n  if (statusRequest.granted) {\n    // the user did grant the permission now\n    return true;\n  }\n\n  // user did not grant the permission, so he must have declined the request\n  return false;\n};\n\n//checking permisions\n/*public async checkPermission(): Promise<boolean>{\n  const status = await BarcodeScanner.checkPermission();\n\n  if (status.denied) {\n    // the user denied permission for good\n    // redirect user to app settings if they want to grant it anyway\n    const c = confirm(\n      'Si deseas utilizar el traductor de codigos QR debes permitir acceder a la camara en las opciones de la aplicación',\n    );\n    if (c) {\n      BarcodeScanner.openAppSettings();\n    }\n  }\n};*/\npublic async checkPermission() : Promise<boolean>{\n  // check or request permission\n  const status = await BarcodeScanner.checkPermission({ force: true });\n\n  if (status.granted) {\n    // the user granted permission\n    return true;\n  }\n\n  return false;\n};\n\n\npublic async startScan (){\n  this.capturing=true;\n  this.scanActive = true;\n  console.log(\"setting opacity\")\n  BarcodeScanner.hideBackground(); // make background of WebView transparent\n  document.body.style.opacity=\"0.2\";\n\n  const result = await BarcodeScanner.startScan();\n  if (result.hasContent) {\n    document.body.style.background = \"\";\n    document.body.style.opacity=\"1\";\n    console.log(result.content);\n    this.capturedQR=result.content;\n    \n    this.capturing=false;\n  }\n  else{\n    this.capturing=false;\n  }\n};\npublic async prepare(){\n    BarcodeScanner.prepare();\n  };\npublic async stopScan (){\n    BarcodeScanner.showBackground();\n    BarcodeScanner.stopScan();\n    document.body.style.background = \"\";\n    document.body.style.opacity=\"1\";\n    \n    this.scanActive = false;\n  };\npublic ionViewWillLeave() {\n    BarcodeScanner.stopScan();\n    document.body.style.background = \"\";\n    document.body.style.opacity=\"1\";\n    this.scanActive = false;\n  }  \n\n/****************************************************************************************************************** */\n/* Buttons functions\n/****************************************************************************************************************** */\n  /**\n   * This function will start the look for for QR codes using the back camera\n   */\n   async startScanner(){  \n    if(this.platform.is('android') || this.platform.is('ios'))\n    {\n        if((await this.didUserGrantPermission()) === true) {\n          this.startScan()\n        }\n        \n       /**\n       * This function will stop the look for for QR codes using the back camera\n       */\n      await this.stopScan();\n    }\n    else{\n      alert(\"no implementado en web browser\")\n    }    \n  }  \n  async stopScanner(){  \n    if(this.platform.is('android') || this.platform.is('ios'))\n    {\n                \n       /**\n       * This function will stop the look for for QR codes using the back camera\n       */\n      await this.stopScan();\n    }    \n  }  \n\n  //sending qr information for system notification\n  async sendQr(){\n    console.log(\"QR:\"+this.capturedQR)\n    let a=new MessageModel(this.nurseName,JSON.stringify(this.capturedQR),  this.bedId, \"0\",11);    \n      console.log(a)\n      let mqttmessage=JSON.stringify(a);\n      console.log(mqttmessage);\n      let topic=\"/User/general\";\n    await this.MQTTServ.sendMesagge(topic, mqttmessage);\n\n  }\n  // setting information \n\n}\n","import { Injectable } from '@angular/core';\nimport { Bed } from '../models/bed';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BedsService {\n  private localBed: Bed= new Bed(0,0,0,0); \n  constructor() { }\n\n  public setBed(bed: Bed) {\n    this.localBed=bed;\n  }\n  public getBed(): Bed {\n    return this.getBed();\n  }\n  public setBedId(bedId: number) {\n    this.localBed.bedId=bedId;\n  };\n  public getBedId():number {\n    return this.localBed.bedId;\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport {Client, connect} from 'rsup-mqtt'\nimport { LocalStorageService } from '../services/local-storage.service';\nimport { Storage } from '@capacitor/storage';\nimport { MessageModel } from '../models/message-model';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MqttService implements OnInit  {\n  MQTTSERVER:string=\"127.0.0.2\";\n  MQTTPORT:number=9001;\n  MQTTClientLocal: Client;\n  number:number;\n  connected: number;\n\n  constructor(public localSto: LocalStorageService) { }\n\n  \n  ngOnInit() {\n    connect({host: this.MQTTSERVER, port: this.MQTTPORT, ssl: false,path:'/test/'})\n    .then(client => { this.MQTTClientLocal = client; });\n    \n  }\n  /**\n   * Saving port values to localStorage\n   */\n   public saveValues = async () => {  \n    this.localSto.saveValuesString('MQTTSERVER',this.MQTTSERVER);\n    this.localSto.saveValuesNumber('MQTTPORT',this.MQTTPORT);\n  };\n\n  /**\n   * Get the server ip from the local storage\n   */\n  public getServer = async () => {\n    let { value } = await Storage.get({ key: 'MQTTSERVER' });    \n    let server=value;    \n    this.MQTTSERVER=server;\n    console.log('MQTTSERVER:'+this.MQTTSERVER);\n  };\n\n  /**\n   * Get the broker port from the local storage\n   */\n  public getPort = async () => {\n    \n    let {value}  = await Storage.get({ key: 'MQTTPORT' });    \n    let port=parseInt(value);  \n    this.MQTTPORT=port;\n    console.log('MQTTPORT:'+this.MQTTPORT);  \n  };\n\n  public Reset(){\n    //console.log(\"clicked:\", this.MQTTSERVER,\":\", this.MQTTPORT);\n\n    this.getServer();\n    this.getPort();  \n    this.connected=0;\n    \n    if(this.MQTTClientLocal!==null){\n    this.MQTTClientLocal.disconnect();\n    console.log(\"here\");\n    this.MQTTClientLocal= null;\n    }\n    //this.MQTTClientLocal= NULL;\n    \n    connect({host: this.MQTTSERVER, port: this.MQTTPORT, ssl: false,path:'/test/'})\n    .then(client => { \n      console.log(client);\n      if(client.isConnected())\n        {this.connected=1;\n          this.MQTTClientLocal = client; \n          console.log(\"status: connected\");\n        }    \n    });\n    \n  }\n  public sendMesagge(topic: string, message: string){\n      \n    this.MQTTClientLocal.publish(topic, message);\n  }\n  public sendMesaggeRetain(topic: string, message: string){\n      \n    this.MQTTClientLocal.publish(topic, message,{retain: true});\n  }\n\n   public async Connect(usernameP:string, passwordP:string): Promise<number>{\n    let connected=0;\n    \n    //this.client=Mqtt.Client(\"myclient\");\n    this.getServer();\n    this.getPort();\n    console.log(\"here:\"+this.MQTTSERVER);\n    await connect({host: this.MQTTSERVER, port: this.MQTTPORT, username: usernameP, password: passwordP, ssl: false,path:'/test/'})\n    //connect({host: \"192.168.1.100\", port: 9001, username: usernameP, password: passwordP, ssl: false,path:'/test/'})\n    .then(client => { \n      console.log(client);\n      if(client.isConnected())\n        {connected=1;\n          this.MQTTClientLocal = client; \n          console.log(\"status: connected\");          \n          return 1;\n        }\n        throw new TypeError(\"No connection\")    \n    })\n    .catch (function(json) { \n      console.log(json); connected=0; \n      if(json.errorCode == 7)\n        {alert(\"error: mala configuracion broker\");}\n      return connected;})\n    .finally(function(){return connected;}); \n  \n  return connected;\n    \n  }\n\n  public listenToTopic(topic: string){\n      console.log(\"here\");\n     //this.MQTTClientLocal.onMessage(topic, message=>console.log(message.string));\n  //   this.MQTTClientLocal.subscribe(topic).on(Message=>console.log(Message.string));\n  }\n\n  public closingAll(topic: string){\n    this.MQTTClientLocal.removeMessageListener(topic, message=>console.log(message.string));\n    \n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from '../models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  \n  private loggedUser: User = new User(0,\"\",\"\",\"\",\"\",0,\"\");\n\n  constructor() { \n   \n  }\n\n  /**\n   * Getting the current loged user\n  */\n  public getUser(): User {\n    return this.loggedUser;\n  }\n  /**\n   * Setting the current loged user(after validation from server)\n  */\n\n   public setUser(userId: number, userName: string, userFirstName: string, userLastName: string,usermode: string): User {\n    this.loggedUser.userId = userId;\n    this.loggedUser.firstname= userFirstName;\n    this.loggedUser.lastname= userLastName;\n    this.loggedUser.occupation= usermode;\n    this.loggedUser.username= userName;\n    return this.loggedUser;\n  }\n  \n}\n","export var SupportedFormat;\n(function (SupportedFormat) {\n    // BEGIN 1D Product\n    /**\n     * Android only, UPC_A is part of EAN_13 according to Apple docs\n     */\n    SupportedFormat[\"UPC_A\"] = \"UPC_A\";\n    SupportedFormat[\"UPC_E\"] = \"UPC_E\";\n    /**\n     * Android only\n     */\n    SupportedFormat[\"UPC_EAN_EXTENSION\"] = \"UPC_EAN_EXTENSION\";\n    SupportedFormat[\"EAN_8\"] = \"EAN_8\";\n    SupportedFormat[\"EAN_13\"] = \"EAN_13\";\n    // END 1D Product\n    // BEGIN 1D Industrial\n    SupportedFormat[\"CODE_39\"] = \"CODE_39\";\n    /**\n     * iOS only\n     */\n    SupportedFormat[\"CODE_39_MOD_43\"] = \"CODE_39_MOD_43\";\n    SupportedFormat[\"CODE_93\"] = \"CODE_93\";\n    SupportedFormat[\"CODE_128\"] = \"CODE_128\";\n    /**\n     * Android only\n     */\n    SupportedFormat[\"CODABAR\"] = \"CODABAR\";\n    SupportedFormat[\"ITF\"] = \"ITF\";\n    /**\n     * iOS only\n     */\n    SupportedFormat[\"ITF_14\"] = \"ITF_14\";\n    // END 1D Industrial\n    // BEGIN 2D\n    SupportedFormat[\"AZTEC\"] = \"AZTEC\";\n    SupportedFormat[\"DATA_MATRIX\"] = \"DATA_MATRIX\";\n    /**\n     * Android only\n     */\n    SupportedFormat[\"MAXICODE\"] = \"MAXICODE\";\n    SupportedFormat[\"PDF_417\"] = \"PDF_417\";\n    SupportedFormat[\"QR_CODE\"] = \"QR_CODE\";\n    /**\n     * Android only\n     */\n    SupportedFormat[\"RSS_14\"] = \"RSS_14\";\n    /**\n     * Android only\n     */\n    SupportedFormat[\"RSS_EXPANDED\"] = \"RSS_EXPANDED\";\n    // END 2D\n})(SupportedFormat || (SupportedFormat = {}));\nexport var CameraDirection;\n(function (CameraDirection) {\n    CameraDirection[\"FRONT\"] = \"front\";\n    CameraDirection[\"BACK\"] = \"back\";\n})(CameraDirection || (CameraDirection = {}));\n","import { registerPlugin } from '@capacitor/core';\nconst BarcodeScanner = registerPlugin('BarcodeScanner', {\n    web: () => import('./web').then(m => new m.BarcodeScannerWeb()),\n});\nexport * from './definitions';\nexport { BarcodeScanner };\n"],"names":[],"sourceRoot":"webpack:///"}