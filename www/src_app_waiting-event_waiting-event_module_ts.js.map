{"version":3,"file":"src_app_waiting-event_waiting-event_module_ts.js","mappings":"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","sources":["./src/app/waiting-event/waiting-event-routing.module.ts","./src/app/waiting-event/waiting-event.module.ts","./src/app/waiting-event/waiting-event.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { WaitingEventPage } from './waiting-event.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: WaitingEventPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class WaitingEventPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { WaitingEventPageRoutingModule } from './waiting-event-routing.module';\n\nimport { WaitingEventPage } from './waiting-event.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    WaitingEventPageRoutingModule\n  ],\n  declarations: [WaitingEventPage]\n})\nexport class WaitingEventPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Bed } from '../models/bed';\nimport { MessageModel } from '../models/message-model';\nimport { User } from '../models/user';\nimport { BedsService } from '../services/beds.service';\nimport { LocalStorageService } from '../services/local-storage.service';\nimport { MqttService } from '../services/mqtt.service';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-waiting-event',\n  templateUrl: './waiting-event.page.html',\n  styleUrls: ['./waiting-event.page.scss'],\n})\nexport class WaitingEventPage implements OnInit {\n  localNurse: User= new User( 0,\"\",\"\",\"\",\"\",0,\"\");\n  usernameLocal: string;\n  bed : Bed = new Bed( 0,0,0,0,);\n  bedId: number;\n  messages: Array<MessageModel> = new Array;\n  \n\n  constructor(private activatedRoute: ActivatedRoute,\n    public MQTTServ:MqttService,\n    public localSto: LocalStorageService,\n    private router:Router,\n    public localBed: BedsService,\n    public userLogged:UserService) { }\n\n  ngOnInit() {\n    this.localNurse=this.userLogged.getUser();\n    setTimeout(()=>{\n      this.eventsSubscription();\n    },600);\n  }\n\n  /**\n   * Subscription for receiving messages\n   * kind of messages waiting for: {\"_bedId\":2,\"_content\":\"alert\",\"_time\":\"today\",\"_username\":\"system\"}\n   * It is only used the bedId parameter\n   */\n   eventsSubscription(){\n    \n    let topic=\"/Beds/status\";\n    let receivedMessage;\n    console.log(\"subscribed\")\n    this.MQTTServ.MQTTClientLocal.subscribe(topic).on(Message=>{\n      console.log(\"received\")\n      console.log(Message.string);            \n    let localMessage = JSON.parse(Message.string);      \n    let local2=Message.string;\n    console.log(localMessage[0].message);    \n    this.messages=[];\n    localMessage.forEach(element => {      \n      {        \n      receivedMessage = new MessageModel(\"\",\"\",element.id,\"\",element.st);\n      this.messages.push(receivedMessage);\n     }\n    });\n    \n  \n    });\n  }\n\n\n  /**\n   * Accepting a bed call... and moving to the bed\n   * @param i beds number \n   */\n  public async onClick(i:number){\n    this.localBed.setBedId(i);\n    this.bed.bedId = i;    \n    this.router.navigate(['/nurse-main/:'+i]);\n    let topic=\"/Beds/status\";   \n    \n    \n    let a=new MessageModel(this.localNurse.username,\"\",  this.bed.bedId, \"0\",12);    \n    console.log(a)\n    let mqttmessage=JSON.stringify(a);\n    console.log(mqttmessage);\n    topic=\"/User/general\";\n    await this.MQTTServ.sendMesagge(topic, mqttmessage);        \n  }\n  /**\n   * asking for bed information\n   * @param i beds number\n   */\n  onClick2(i:number){    \n    this.localBed.setBedId(i);\n   \n    this.router.navigate(['/nurse-bed/:'+i]);        \n  }\n\n\n  /**\n   * logout\n   */\n  logout(){\n    console.log(\"logging out\");\n    console.log(\"name:\"+this.localNurse.username);\n   let question=\"logout\";\n      \n   let a=new MessageModel(this.localNurse.username, question, 0, \"\",2);    \n   console.log(JSON.stringify(a));\n   let mqttmessage=(a).toString();\n   console.log(mqttmessage);\n   let topic=\"/User/general\";\n   this.MQTTServ.sendMesagge(topic, JSON.stringify(a));  \n   topic=\"/Beds/status\";   \n   \n   \n   this.router.navigate(['/home/']);        \n\n   \n  }\n/**\n * go to general chat\n */\n  public goChat(){\n    /*   this.router.navigate(['/chat/]);        */\n    this.localBed.setBedId(0);\n    this.router.navigate(['/chat/']);        \n      }\n}\n"],"names":[],"sourceRoot":"webpack:///"}