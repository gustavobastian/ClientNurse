{"version":3,"file":"src_app_chat_chat_module_ts.js","mappings":"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","sources":["./src/app/chat/chat-routing.module.ts","./src/app/chat/chat.module.ts","./src/app/chat/chat.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ChatPage } from './chat.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ChatPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ChatPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ChatPageRoutingModule } from './chat-routing.module';\n\nimport { ChatPage } from './chat.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ChatPageRoutingModule\n  ],\n  declarations: [ChatPage]\n})\nexport class ChatPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { LocalStorageService } from '../services/local-storage.service';\nimport { Storage } from '@capacitor/storage';\nimport { MqttService } from '../services/mqtt.service';\nimport { MessageModel } from '../models/message-model';\nimport { ActivatedRoute } from '@angular/router';\nimport { json } from 'express';\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.page.html',\n  styleUrls: ['./chat.page.scss'],\n})\nexport class ChatPage implements OnInit {\n\n  usernameLocal: string;\n  bedId: number;\n  question: string;\n  messages: Array<MessageModel> = new Array;\n\n  counts :number = 0;\n  \n\n  constructor(private activatedRoute: ActivatedRoute,public MQTTServ:MqttService,public localSto: LocalStorageService) { \n    \n    this.bedId=0;\n  }\n\n  ngOnInit() {\n    this.getParams();\n    this.bedId = parseInt( this.activatedRoute.snapshot.paramMap.get(\"id\"));\n    console.log(this.bedId);\n    if(this.bedId === 0)\n    {console.log(\"cama 0\");    \n    }    \n    if(Number.isNaN(this.bedId)==true)\n    {console.log(\"cama 0\");    \n    this.bedId=0;\n    }    \n    setTimeout(()=>{\n      this.bedIdSubscription();\n    },600);\n    \n    //\n  }\n\n\n  /**\n   * Getting the parameters of the user from the local storage\n   */\n  async getParams() {\n    let { value } = await Storage.get({ key: 'username' });      \n    this.usernameLocal=value.toString();\n    console.log(this.usernameLocal);\n  }\n\n\n  /**\n   * Sending the question to the system\n   */\n  ask(question:string){\n    //this.bedIdSubscription();\n    this.counts++;\n    console.log(\"counts tx:\"+this.counts);\n    var time= new Date();\n    //let value2= (time.getHours()).toString+\":\"+ (time.getMinutes()).toString();\n    let value= time.getFullYear()+\"/\"+time.getMonth()+\"/\"+time.getDay() +\"-\"+(time.getHours())+\":\"+ (time.getMinutes())+\":\"+time.getSeconds();;\n    //console.log(value);\n    //let value=\"12:24\";\n    let a=new MessageModel(this.usernameLocal,question,  this.bedId, value);\n    \n    let mqttmessage=JSON.stringify(a);\n    let topic=\"/bed/\"+this.bedId+\"/chat/\";\n    this.MQTTServ.sendMesagge(topic, mqttmessage);\n\n    this.question=\"\";\n  }\n  /**\n   * Record and send a sound message\n   */\n  record(){\n    this.question=\"grabando audio\";    \n    var time= new Date();\n    let value= (time.getHours())+\":\"+ (time.getMinutes())+\":\"+time.getSeconds();;\n    let a=new MessageModel(this.usernameLocal,this.question,  this.bedId, value);    \n    let mqttmessage=JSON.stringify(a);\n    let topic=\"/bed/\"+this.bedId+\"/chat/\";\n    this.MQTTServ.sendMesagge(topic, mqttmessage);\n    this.question=\"\";\n    \n  }\n\n  /**\n   * Closing the comunication\n   */\n  finish(){\n    this.question=\"terminando\";\n    var time= new Date();\n    let value= (time.getHours())+\":\"+ (time.getMinutes())+\":\"+time.getSeconds();\n    let a=new MessageModel(this.usernameLocal,this.question,  this.bedId, value);    \n    let mqttmessage=(a).toString();\n    let topic=\"/bed/\"+this.bedId+\"/chat/\";\n    this.MQTTServ.sendMesagge(topic, mqttmessage);\n    this.question=\"\";\n    this.MQTTServ.closingAll(topic);\n\n  }\n\n  /**\n   * Subscription for receiving messages\n   */\n  bedIdSubscription(){\n    let topic=\"/bed/\"+this.bedId+\"/chat/\";\n    \n    this.MQTTServ.MQTTClientLocal.subscribe(topic).on(Message=>{\n    let localMessage = JSON.parse(Message.string);      \n      \n    let receivedMessage = new MessageModel(localMessage._username,localMessage._content,localMessage._bedId,localMessage._time);\n    \n    if((this.messages[this.messages.length - 1])!==receivedMessage){   \n    this.messages.push(receivedMessage);    \n    }\n    //this.messages[0]=receivedMessage;\n    \n    });\n  }\n  \n\n}\n"],"names":[],"sourceRoot":"webpack:///"}