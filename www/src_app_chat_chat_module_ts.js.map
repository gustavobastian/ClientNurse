{"version":3,"file":"src_app_chat_chat_module_ts.js","mappings":"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","sources":["./src/app/chat/chat-routing.module.ts","./src/app/chat/chat.module.ts","./src/app/chat/chat.page.ts","./src/app/models/bed.ts","./src/app/models/message-model.ts","./src/app/models/user.ts","./src/app/services/beds.service.ts","./src/app/services/mqtt.service.ts","./src/app/services/user.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ChatPage } from './chat.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ChatPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ChatPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ChatPageRoutingModule } from './chat-routing.module';\n\nimport { ChatPage } from './chat.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ChatPageRoutingModule\n  ],\n  declarations: [ChatPage]\n})\nexport class ChatPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { LocalStorageService } from '../services/local-storage.service';\nimport { Storage } from '@capacitor/storage';\nimport { MqttService } from '../services/mqtt.service';\nimport { MessageModel } from '../models/message-model';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { json } from 'express';\nimport { UserService } from '../services/user.service';\nimport { BedsService } from '../services/beds.service';\nimport { User } from '../models/user';\nimport { Bed } from '../models/bed';\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.page.html',\n  styleUrls: ['./chat.page.scss'],\n})\nexport class ChatPage implements OnInit {\n  localUser: User= new User(0,\"\",\"\",\"\",\"\",0,\"\");\n  localBed: Bed = new Bed(0,0,0,0);\n\n  usernameLocal: string;\n  bedId: number;\n  public mode :number=0;\n  question: string;\n  messages: Array<MessageModel> = new Array;\n\n  counts :number = 0;\n  \n\n  constructor(private activatedRoute: ActivatedRoute,\n    public MQTTServ:MqttService,\n    public localSto: LocalStorageService,\n    public userServ: UserService,\n    private router:Router,\n    public bedlocal: BedsService\n    ) { \n    \n    //this.bedId=0;\n  }\n\n  ngOnInit() {\n    this.getParams();\n  //  this.bedId = parseInt( this.activatedRoute.snapshot.paramMap.get(\"id\"));\n    this.localBed.bedId= this.bedlocal.getBedId();\n    this.bedId =this.localBed.bedId;\n    console.log(\"cama ::::\"+this.bedId);\n    if(this.bedId === 0)\n    {console.log(\"cama 0\");    \n    }    \n    if(Number.isNaN(this.bedId)==true)\n    {console.log(\"cama 0\");    \n    this.bedId=0;\n    }    \n    setTimeout(()=>{\n      this.bedIdSubscription();\n      this.startResponse();\n    },600);\n    \n    //\n  }\n\n\n  /**\n   * Getting the parameters of the user from the local storage\n   */\n  async getParams() {\n    /*let { value } = await Storage.get({ key: 'username' });      \n    this.usernameLocal=value.toString();\n    console.log(this.usernameLocal);*/\n    this.localUser= this.userServ.getUser();\n    this.localBed.bedId= this.bedlocal.getBedId();\n    console.log(\"occuppation:\"+this.localUser.occupation)\n    if(this.localUser.occupation==\"Médico\"){\n      this.mode=1;\n    }\n    else if(this.localUser.occupation===\"Enfermero\"){\n          this.mode=2;\n          }\n          \n\n\n  }\n\n\n  /**\n   * Sending the question to the system : command type 7\n   */\n  ask(question:string){\n    //this.bedIdSubscription();\n    \n    var time= new Date();\n    //let value2= (time.getHours()).toString+\":\"+ (time.getMinutes()).toString();\n    let value= time.getFullYear()+\"/\"+time.getMonth()+\"/\"+time.getDay() +\"-\"+(time.getHours())+\":\"+ (time.getMinutes())+\":\"+time.getSeconds();;\n    //console.log(value);\n    //let value=\"12:24\";\n    let a=new MessageModel(this.localUser.username,question,  this.bedId, value,7);\n    \n    let mqttmessage=JSON.stringify(a);\n    let topic=\"/Beds/\"+this.bedId+\"/chat/\";\n    this.MQTTServ.sendMesagge(topic, mqttmessage);\n\n    this.question=\"\";\n  }\n  /**\n   * Record and send a sound message : command type 2\n   */\n  record(){\n    this.question=\"grabando audio\";    \n    var time= new Date();\n    let value= (time.getHours())+\":\"+ (time.getMinutes())+\":\"+time.getSeconds();;\n    let a=new MessageModel(this.localUser.username,this.question,  this.bedId, value,1);    \n    let mqttmessage=JSON.stringify(a);\n    let topic=\"/Beds/\"+this.bedId+\"/chat/\";\n    this.MQTTServ.sendMesagge(topic, mqttmessage);\n    this.question=\"\";    \n  }\n\n  /**\n   * Sending listenting message from doctor\n   */\n   startResponse(){\n    if(this.mode==1){\n    this.question=\"conectado\";    \n    var time= new Date();\n    let value= time.getFullYear()+\"/\"+time.getMonth()+\"/\"+time.getDay() +\"-\"+(time.getHours())+\":\"+ (time.getMinutes())+\":\"+time.getSeconds();;\n    let a=new MessageModel(this.localUser.username,this.question,  this.bedId, value,1);    \n    let mqttmessage=JSON.stringify(a);\n    let topic=\"/Beds/\"+this.bedId+\"/chat/\";\n    this.MQTTServ.sendMesagge(topic, mqttmessage);\n    this.question=\"\";\n    }    \n  }\n\n  /**\n   * Closing the comunication : command type: 6\n   */\n  finish(){\n    this.question=\"terminando\";\n    var time= new Date();\n    let value= (time.getHours())+\":\"+ (time.getMinutes())+\":\"+time.getSeconds();\n    let a=new MessageModel(this.localUser.username,this.question,  this.bedId, value,6);    \n    let mqttmessage=JSON.stringify(a).toString();\n    let topic=\"/Beds/\"+this.bedId+\"/chat/\";\n    this.MQTTServ.sendMesagge(topic, mqttmessage);\n    this.question=\"\";\n    let b= new MessageModel(this.localUser.username,this.question,  this.bedId, \"\",16);    \n     mqttmessage=JSON.stringify(b);\n     topic=\"/User/general\";\n    this.MQTTServ.sendMesagge(topic, mqttmessage);\n    this.question=\"\";\n    console.log(\"mode:\"+this.mode)\n    //this.MQTTServ.closingAll(topic);\n    if(this.mode!=1){\n    \n        if(this.bedId!=0)\n        {this.router.navigate(['/nurse-main/:{{bedId}}/']);}\n        else  \n        {this.router.navigate(['/waiting-event/']);}          \n    }\n    else{\n      this.router.navigate(['/doctor-main/{{localUser.userId}}/']);        \n      \n    }\n\n  }\n\n  /**\n   * Subscription for receiving messages\n   */\n  bedIdSubscription(){\n    let topic=\"/Beds/\"+this.bedId+\"/chat/\";\n    \n    this.MQTTServ.MQTTClientLocal.subscribe(topic).on(Message=>{\n    let localMessage = JSON.parse(Message.string);      \n      \n    let receivedMessage = new MessageModel(localMessage._username,localMessage._content,localMessage._bedId,localMessage._time,localMessage._type);\n    \n    if((this.messages[this.messages.length - 1])!==receivedMessage){   \n    this.messages.push(receivedMessage);    \n    }\n    //this.messages[0]=receivedMessage;\n    \n    });\n  }\n  \n\n}\n","export class Bed{\n    private _bedId: number;\n    private _roomId: number;\n    private _callerId: number;\n    private _floorId: number;\n\n    constructor(bedId: number, roomId: number, callerId: number, floorId: number){\n        this._bedId= bedId;\n        this._callerId= callerId;\n        this._floorId= floorId;\n        this._roomId= roomId;\n    } \n\n    public get bedId(){\n        return this._bedId;\n    }\n    public get roomId(){\n        return this._roomId;\n    }\n    public get floorId(){\n        return this._floorId;\n    }\n    public get callerId(){\n        return this._callerId;\n    }\n\n    public set bedId(bedId: number){\n        this._bedId = bedId;\n    }\n    public set callerId(callerId: number){\n        this._callerId = callerId;\n    }\n    public set floorId(floorId: number){\n        this._floorId = floorId;\n    }\n    public set roomId(roomId: number){\n        this._roomId = roomId;\n    }\n    \n}","export class MessageModel{\n    private _username: string;    \n    private _content: string;\n    private _bedId: number;\n    private _time: string;\n    private _type: number;\n\n    constructor(userName: string, content: string, bedId: number, time: string, type: number){\n        this._username= userName;\n        this._content= content;\n        this._bedId= bedId;\n        this._time= time;\n        this._type= type;\n    } \n\n    public get username(){\n        return this._username;\n    }\n    public get content(){\n        return this._content;\n    }\n    public get bedId(){\n        return this._bedId;\n    }\n    public get time(){\n        return this._time;\n    }\n    public get type(){\n        return this._type;\n    }\n\n    public set username(username: string){\n        this._username = username;\n    }\n    public set content(content: string){\n        this._content = content;\n    }\n    public set bedId(bedId: number){\n        this._bedId = bedId;\n    }\n    public set time(time: string){\n        this._time = time;\n    }\n    public set type(type: number){\n        this._type = type;\n    }\n    \n}\n","export class User{\n    private _userId: number;\n    private _username: string;\n    private _firstname: string;\n    private _lastname: string;\n    private _occupation: string;\n    private _state: number;\n    private _password: string;\n\n    constructor(userId: number, username: string, firstName: string, lastName: string, occupation: string, state: number, password: string){\n        this._userId = userId;\n        this._username = username;\n        this._firstname= firstName;\n        this._lastname= lastName;\n        this._occupation= occupation;\n        this._state = state;\n        this._password=password;\n    }\n\n    public set userId(value: number){\n        this._userId=value;        \n    }\n    public set username(value: string){\n        this._username= value;\n    }\n    public set firstname(value: string){\n        this._firstname= value;\n    }\n    public set lastname (value: string){\n        this._lastname= value;\n    }\n    public set occupation(value: string){\n        this._occupation= value;\n    }\n    public set state(state: number){\n        this._state= state;\n    }\n    public set password(password: string ){\n        this._password = password;\n    }\n\n\n    public get userId(): number{\n       return this._userId;\n    }\n    public get username(): string{\n       return this._username;\n    }\n    public get_username(): string{\n        return this._username;\n     }\n    public get firstName():string{\n        return this._firstname;\n    }\n    public get lastName(): string{\n        return this._lastname;\n    }\n    public get occupation(): string{\n        return this._occupation;\n    }\n    public get state(): number{\n        return this._state;\n    }\n    public get password(): string{\n        return this._password;\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { Bed } from '../models/bed';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BedsService {\n  private localBed: Bed= new Bed(0,0,0,0); \n  constructor() { }\n\n  public setBed(bed: Bed) {\n    this.localBed=bed;\n  }\n  public getBed(): Bed {\n    return this.getBed();\n  }\n  public setBedId(bedId: number) {\n    this.localBed.bedId=bedId;\n  };\n  public getBedId():number {\n    return this.localBed.bedId;\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport {Client, connect} from 'rsup-mqtt'\nimport { LocalStorageService } from '../services/local-storage.service';\nimport { Storage } from '@capacitor/storage';\nimport { MessageModel } from '../models/message-model';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MqttService implements OnInit  {\n  MQTTSERVER:string=\"127.0.0.2\";\n  MQTTPORT:number=9001;\n  MQTTClientLocal: Client;\n  number:number;\n  connected: number;\n\n  constructor(public localSto: LocalStorageService) { }\n\n  \n  ngOnInit() {\n    connect({host: this.MQTTSERVER, port: this.MQTTPORT, ssl: false,path:'/test/'})\n    .then(client => { this.MQTTClientLocal = client; });\n    \n  }\n  /**\n   * Saving port values to localStorage\n   */\n   public saveValues = async () => {  \n    this.localSto.saveValuesString('MQTTSERVER',this.MQTTSERVER);\n    this.localSto.saveValuesNumber('MQTTPORT',this.MQTTPORT);\n  };\n\n  /**\n   * Get the server ip from the local storage\n   */\n  public getServer = async () => {\n    let { value } = await Storage.get({ key: 'MQTTSERVER' });    \n    let server=value;    \n    this.MQTTSERVER=server;\n    console.log('MQTTSERVER:'+this.MQTTSERVER);\n  };\n\n  /**\n   * Get the broker port from the local storage\n   */\n  public getPort = async () => {\n    \n    let {value}  = await Storage.get({ key: 'MQTTPORT' });    \n    let port=parseInt(value);  \n    this.MQTTPORT=port;\n    console.log('MQTTPORT:'+this.MQTTPORT);  \n  };\n\n  public Reset(){\n    //console.log(\"clicked:\", this.MQTTSERVER,\":\", this.MQTTPORT);\n\n    this.getServer();\n    this.getPort();  \n    this.connected=0;\n    \n    if(this.MQTTClientLocal!==null){\n    this.MQTTClientLocal.disconnect();\n    console.log(\"here\");\n    this.MQTTClientLocal= null;\n    }\n    //this.MQTTClientLocal= NULL;\n    \n    connect({host: this.MQTTSERVER, port: this.MQTTPORT, ssl: false,path:'/test/'})\n    .then(client => { \n      console.log(client);\n      if(client.isConnected())\n        {this.connected=1;\n          this.MQTTClientLocal = client; \n          console.log(\"status: connected\");\n        }    \n    });\n    \n  }\n  public sendMesagge(topic: string, message: string){\n      \n    this.MQTTClientLocal.publish(topic, message);\n  }\n  public sendMesaggeRetain(topic: string, message: string){\n      \n    this.MQTTClientLocal.publish(topic, message,{retain: true});\n  }\n\n   public async Connect(usernameP:string, passwordP:string): Promise<number>{\n    let connected=0;\n    \n    //this.client=Mqtt.Client(\"myclient\");\n    this.getServer();\n    this.getPort();\n    console.log(\"here:\"+this.MQTTSERVER);\n    await connect({host: this.MQTTSERVER, port: this.MQTTPORT, username: usernameP, password: passwordP, ssl: false,path:'/test/'})\n    //connect({host: \"192.168.1.100\", port: 9001, username: usernameP, password: passwordP, ssl: false,path:'/test/'})\n    .then(client => { \n      console.log(client);\n      if(client.isConnected())\n        {connected=1;\n          this.MQTTClientLocal = client; \n          console.log(\"status: connected\");          \n          return 1;\n        }\n        throw new TypeError(\"No connection\")    \n    })\n    .catch (function(json) { \n      console.log(json); connected=0; \n      if(json.errorCode == 7)\n        {alert(\"error: mala configuracion broker\");}\n      return connected;})\n    .finally(function(){return connected;}); \n  \n  return connected;\n    \n  }\n\n  public listenToTopic(topic: string){\n      console.log(\"here\");\n     //this.MQTTClientLocal.onMessage(topic, message=>console.log(message.string));\n  //   this.MQTTClientLocal.subscribe(topic).on(Message=>console.log(Message.string));\n  }\n\n  public closingAll(topic: string){\n    this.MQTTClientLocal.removeMessageListener(topic, message=>console.log(message.string));\n    \n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from '../models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  \n  private loggedUser: User = new User(0,\"\",\"\",\"\",\"\",0,\"\");\n\n  constructor() { \n   \n  }\n\n  /**\n   * Getting the current loged user\n  */\n  public getUser(): User {\n    return this.loggedUser;\n  }\n  /**\n   * Setting the current loged user(after validation from server)\n  */\n\n   public setUser(userId: number, userName: string, userFirstName: string, userLastName: string,usermode: string): User {\n    this.loggedUser.userId = userId;\n    this.loggedUser.firstname= userFirstName;\n    this.loggedUser.lastname= userLastName;\n    this.loggedUser.occupation= usermode;\n    this.loggedUser.username= userName;\n    return this.loggedUser;\n  }\n  \n}\n"],"names":[],"sourceRoot":"webpack:///"}