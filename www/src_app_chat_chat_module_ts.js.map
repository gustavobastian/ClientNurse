{"version":3,"file":"src_app_chat_chat_module_ts.js","mappings":"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","sources":["./src/app/chat/chat-routing.module.ts","./src/app/chat/chat.module.ts","./src/app/chat/chat.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ChatPage } from './chat.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ChatPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ChatPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ChatPageRoutingModule } from './chat-routing.module';\n\nimport { ChatPage } from './chat.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ChatPageRoutingModule\n  ],\n  declarations: [ChatPage]\n})\nexport class ChatPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { LocalStorageService } from '../services/local-storage.service';\nimport { Storage } from '@capacitor/storage';\nimport { MqttService } from '../services/mqtt.service';\nimport { MessageModel } from '../models/message-model';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { json } from 'express';\nimport { UserService } from '../services/user.service';\nimport { BedsService } from '../services/beds.service';\nimport { User } from '../models/user';\nimport { Bed } from '../models/bed';\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.page.html',\n  styleUrls: ['./chat.page.scss'],\n})\nexport class ChatPage implements OnInit {\n  localUser: User= new User(0,\"\",\"\",\"\",\"\",0,\"\");\n  localBed: Bed = new Bed(0,0,0,0);\n\n  usernameLocal: string;\n  bedId: number;\n  public mode :number=0;\n  question: string;\n  messages: Array<MessageModel> = new Array;\n\n  counts :number = 0;\n  \n\n  constructor(private activatedRoute: ActivatedRoute,\n    public MQTTServ:MqttService,\n    public localSto: LocalStorageService,\n    public userServ: UserService,\n    private router:Router,\n    public bedlocal: BedsService\n    ) { \n    \n    //this.bedId=0;\n  }\n\n  ngOnInit() {\n    this.getParams();\n  //  this.bedId = parseInt( this.activatedRoute.snapshot.paramMap.get(\"id\"));\n    this.localBed.bedId= this.bedlocal.getBedId();\n    this.bedId =this.localBed.bedId;\n    console.log(\"cama ::::\"+this.bedId);\n    if(this.bedId === 0)\n    {console.log(\"cama 0\");    \n    }    \n    if(Number.isNaN(this.bedId)==true)\n    {console.log(\"cama 0\");    \n    this.bedId=0;\n    }    \n    setTimeout(()=>{\n      this.bedIdSubscription();\n      this.startResponse();\n    },600);\n    \n    //\n  }\n\n\n  /**\n   * Getting the parameters of the user from the local storage\n   */\n  async getParams() {\n    /*let { value } = await Storage.get({ key: 'username' });      \n    this.usernameLocal=value.toString();\n    console.log(this.usernameLocal);*/\n    this.localUser= this.userServ.getUser();\n    this.localBed.bedId= this.bedlocal.getBedId();\n    console.log(\"occuppation:\"+this.localUser.occupation)\n    if(this.localUser.occupation==\"MÃ©dico\"){\n      this.mode=1;\n    }\n    else if(this.localUser.occupation===\"Enfermero\"){\n          this.mode=2;\n          }\n          \n\n\n  }\n\n\n  /**\n   * Sending the question to the system : command type 7\n   */\n  ask(question:string){\n    //this.bedIdSubscription();\n    \n    var time= new Date();\n    //let value2= (time.getHours()).toString+\":\"+ (time.getMinutes()).toString();\n    let value= time.getFullYear()+\"/\"+time.getMonth()+\"/\"+time.getDay() +\"-\"+(time.getHours())+\":\"+ (time.getMinutes())+\":\"+time.getSeconds();;\n    //console.log(value);\n    //let value=\"12:24\";\n    let a=new MessageModel(this.localUser.username,question,  this.bedId, value,7);\n    \n    let mqttmessage=JSON.stringify(a);\n    let topic=\"/Beds/\"+this.bedId+\"/chat/\";\n    this.MQTTServ.sendMesagge(topic, mqttmessage);\n\n    this.question=\"\";\n  }\n  /**\n   * Record and send a sound message : command type 2\n   */\n  record(){\n    this.question=\"grabando audio\";    \n    var time= new Date();\n    let value= (time.getHours())+\":\"+ (time.getMinutes())+\":\"+time.getSeconds();;\n    let a=new MessageModel(this.localUser.username,this.question,  this.bedId, value,1);    \n    let mqttmessage=JSON.stringify(a);\n    let topic=\"/Beds/\"+this.bedId+\"/chat/\";\n    this.MQTTServ.sendMesagge(topic, mqttmessage);\n    this.question=\"\";    \n  }\n\n  /**\n   * Sending listenting message from doctor\n   */\n   startResponse(){\n    if(this.mode==1){\n    this.question=\"conectado\";    \n    var time= new Date();\n    let value= time.getFullYear()+\"/\"+time.getMonth()+\"/\"+time.getDay() +\"-\"+(time.getHours())+\":\"+ (time.getMinutes())+\":\"+time.getSeconds();;\n    let a=new MessageModel(this.localUser.username,this.question,  this.bedId, value,1);    \n    let mqttmessage=JSON.stringify(a);\n    let topic=\"/Beds/\"+this.bedId+\"/chat/\";\n    this.MQTTServ.sendMesagge(topic, mqttmessage);\n    this.question=\"\";\n    }    \n  }\n\n  /**\n   * Closing the comunication : command type: 6\n   */\n  finish(){\n    this.question=\"terminando\";\n    var time= new Date();\n    let value= (time.getHours())+\":\"+ (time.getMinutes())+\":\"+time.getSeconds();\n    let a=new MessageModel(this.localUser.username,this.question,  this.bedId, value,6);    \n    let mqttmessage=JSON.stringify(a).toString();\n    let topic=\"/Beds/\"+this.bedId+\"/chat/\";\n    this.MQTTServ.sendMesagge(topic, mqttmessage);\n    this.question=\"\";\n    let b= new MessageModel(this.localUser.username,this.question,  this.bedId, \"\",16);    \n     mqttmessage=JSON.stringify(b);\n     topic=\"/User/general\";\n    this.MQTTServ.sendMesagge(topic, mqttmessage);\n    this.question=\"\";\n    console.log(\"mode:\"+this.mode)\n    //this.MQTTServ.closingAll(topic);\n    if(this.mode!=1){\n    \n        if(this.bedId!=0)\n        {this.router.navigate(['/nurse-main/:{{bedId}}/']);}\n        else  \n        {this.router.navigate(['/waiting-event/']);}          \n    }\n    else{\n      this.router.navigate(['/doctor-main/{{localUser.userId}}/']);        \n      \n    }\n\n  }\n\n  /**\n   * Subscription for receiving messages\n   */\n  bedIdSubscription(){\n    let topic=\"/Beds/\"+this.bedId+\"/chat/\";\n    \n    this.MQTTServ.MQTTClientLocal.subscribe(topic).on(Message=>{\n    let localMessage = JSON.parse(Message.string);      \n      \n    let receivedMessage = new MessageModel(localMessage._username,localMessage._content,localMessage._bedId,localMessage._time,localMessage._type);\n    \n    if((this.messages[this.messages.length - 1])!==receivedMessage){   \n    this.messages.push(receivedMessage);    \n    }\n    //this.messages[0]=receivedMessage;\n    \n    });\n  }\n  \n\n}\n"],"names":[],"sourceRoot":"webpack:///"}