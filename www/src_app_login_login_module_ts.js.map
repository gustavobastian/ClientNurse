{"version":3,"file":"src_app_login_login_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEd;AAEzC,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,kDAAS;KACrB;CACF,CAAC;IAMW,sBAAsB,SAAtB,sBAAsB;CAAG;AAAzB,sBAAsB;IAJlC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,sBAAsB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBM;AACM;AACmB;AAErB;AAEmB;AAEvB;IAY5B,eAAe,SAAf,eAAe;CAAG;AAAlB,eAAe;IAV3B,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,+DAAmB;YACnB,yEAAsB;SACvB;QACD,YAAY,EAAE,CAAC,kDAAS,CAAC;KAC1B,CAAC;GACW,eAAe,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBsB;AACmB;AAEd;AACd;AAC+B;AACjB;IAQ1C,SAAS,SAAT,SAAS;IAapB,YAAmB,QAAoB,EAAQ,WAAwB,EAAS,QAA6B,EAAU,MAAa;QAAjH,aAAQ,GAAR,QAAQ,CAAY;QAAQ,gBAAW,GAAX,WAAW,CAAa;QAAS,aAAQ,GAAR,QAAQ,CAAqB;QAAU,WAAM,GAAN,MAAM,CAAO;QAXpI,cAAS,GAAc,IAAI,qDAAS,CAAC;YACnC,QAAQ,EAAE,IAAI,uDAAW,EAAE;YAC3B,QAAQ,EAAE,IAAI,uDAAW,EAAE;SAC5B,CAAC,CAAC;QASD,IAAI,CAAC,IAAI,GAAE,SAAS,CAAC;QACrB,IAAI,CAAC,MAAM,GAAE,KAAK,CAAC;IACrB,CAAC;IAED,QAAQ;QACN,oBAAoB;QACpB,wBAAwB;IAC1B,CAAC;IAEK,YAAY;;YAEhB,IAAI,KAAK,GAAC,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YACjC,IAAI,CAAC,QAAQ,GAAC,KAAK,CAAC,QAAQ,CAAC;YAC7B,IAAI,CAAC,QAAQ,GAAC,KAAK,CAAC,QAAQ,CAAC;YAC7B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC3B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAE3B,IAAI,CAAC,MAAM,GAAI,MAAM,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;YACzE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACzB,IAAI,CAAC,MAAM,GAAE,IAAI,CAAC;YAClB,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;YAC7C,IAAI,CAAC,MAAM,EAAE,CAAC;QACd,CAAC;KAAA;IAEG,MAAM;;YACV,IAAI,CAAC,cAAc,EAAE,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;YACnB,IAAI,QAAQ,GAAC,QAAQ,CAAC;YACtB,IAAI,IAAI,GAAE,IAAI,IAAI,EAAE,CAAC;YACrB,IAAI,KAAK,GAAE,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,GAAC,GAAG,GAAE,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,GAAC,GAAG,GAAC,IAAI,CAAC,UAAU,EAAE,CAAC;YAC5E,IAAI,CAAC,GAAC,IAAI,+DAAY,CAAC,IAAI,CAAC,QAAQ,EAAC,QAAQ,EAAG,CAAC,EAAE,KAAK,CAAC,CAAC;YAC1D,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;YACd,IAAI,WAAW,GAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAClC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;YACzB,IAAI,KAAK,GAAC,eAAe,CAAC;YAC1B,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;YAC9C,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;YAC5C,IAAI,CAAC,cAAc,EAAE,CAAC;QACxB,CAAC;KAAA;IAED,cAAc;QACZ,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;QACrC,IAAI,QAAQ,GAAC,EAAE,CAAC;QAChB,IAAI,KAAK,GAAC,cAAc,CAAC;QACzB,IAAI,YAAY,CAAC;QACjB,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,OAAO,GAAE;YACzD,OAAO,CAAC,GAAG,CAAC,oBAAoB,GAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;YACvD,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YAC1C,IAAI,CAAC,MAAM,GAAC,QAAQ,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;YAC5C,IAAI,CAAC,IAAI,GAAC,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;YAC9B,IAAG,IAAI,CAAC,IAAI,IAAE,OAAO,EACnB;gBACE,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;gBACrB,oBAAoB;gBACpB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;gBAC1C,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,UAAU,EAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACzD,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,MAAM,EAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACrD,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,MAAM,EAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACjD;iBACC,IAAG,IAAI,CAAC,IAAI,IAAE,QAAQ,EACzB;gBACE,yDAAyD;gBACzD,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;gBACtB,oBAAoB;gBACpB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;gBACxC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,UAAU,EAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACzD,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,MAAM,EAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACrD,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,MAAM,EAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACjD;iBACA;gBACF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;aAClC;QAED,CAAC,CAAC;IACJ,CAAC;IAAA,CAAC;CAEH;;YArGQ,+DAAW;YAFX,uDAAW;YAIX,gFAAmB;YADnB,mDAAM;;AAUF,SAAS;IALrB,wDAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,kEAAgC;;KAEjC,CAAC;GACW,SAAS,CA0FrB;AA1FqB","sources":["./src/app/login/login-routing.module.ts","./src/app/login/login.module.ts","./src/app/login/login.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { userInfo } from 'os';\nimport { MqttService } from '../services/mqtt.service';\nimport { Router } from '@angular/router';\nimport { LocalStorageService } from '../services/local-storage.service';\nimport { MessageModel } from '../models/message-model';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  ionicForm: FormGroup = new FormGroup({\n    userName: new FormControl(),\n    password: new FormControl()    \n  });\n  \n  mode : string;\n  username: string;\n  password: string;\n  number:number;\n  showIn: boolean;\n\n  constructor(public MQTTServ:MqttService,public formBuilder: FormBuilder ,public localSto: LocalStorageService, private router:Router) {   \n    this.mode =\"unknown\";\n    this.showIn= false;\n  }\n\n  ngOnInit() {\n    //removing user name\n    //this.MQTTServ.Reset();\n  }\n\n  async onClickLogin() {\n    \n    let local=(this.ionicForm.value);    \n    this.username=local.userName;\n    this.password=local.password;\n    console.log(this.username);    \n    console.log(this.password);\n    \n    this.number =  await this.MQTTServ.Connect(this.username, this.password);\n    console.log(this.number);\n    this.showIn= true;\n    await new Promise(f => setTimeout(f, 10000));\n    this.Log_in();\n    }\n\n  async Log_in() {\n    this.GetUserLogKind(); \n    console.log(\"here\")\n    let question=\"log in\";\n    var time= new Date();\n    let value= (time.getHours())+\":\"+ (time.getMinutes())+\":\"+time.getSeconds();\n    let a=new MessageModel(this.username,question,  0, value);    \n    console.log(a)\n    let mqttmessage=JSON.stringify(a);\n    console.log(mqttmessage);\n    let topic=\"/User/general\";\n    this.MQTTServ.sendMesagge(topic, mqttmessage);\n    await new Promise(f => setTimeout(f, 1000));\n    this.GetUserLogKind(); \n  }\n\n  GetUserLogKind()  {\n    console.log(\"wainting for response\");\n    let question=\"\";\n    let topic=\"/User/System\";    \n    let localMessage;\n    this.MQTTServ.MQTTClientLocal.subscribe(topic).on(Message=>{\n      console.log(\"respuestaSystem:  \"+Message.toString());\n    localMessage = JSON.parse(Message.string);      \n    this.number=parseInt(localMessage.idNumber);\n    this.mode=(localMessage.mode);\n    if(this.mode==\"nurse\")\n      {\n        console.log(\"here2\");\n        //this.mode=\"nurse\";\n        this.router.navigate(['/waiting-event/']);        \n        this.localSto.saveValuesString('username',this.username);\n        this.localSto.saveValuesString('mode',this.username);\n        this.localSto.saveValuesString('mode',this.mode);\n       }\n    else if(this.mode==\"doctor\")\n      {\n        //received in /User/System/{\"idNumber\":1,\"mode\":\"doctor\"}\n        console.log(\"Doctor\");\n        //this.mode=\"nurse\";\n        this.router.navigate(['/doctor-main/']);        \n        this.localSto.saveValuesString('username',this.username);\n        this.localSto.saveValuesString('mode',this.username);\n        this.localSto.saveValuesString('mode',this.mode);\n       }\n    else{\n      this.router.navigate(['/home/']);        \n    }     \n\n    })\n  };\n\n}\n"],"names":[],"sourceRoot":"webpack:///"}