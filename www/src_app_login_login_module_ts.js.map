{"version":3,"file":"src_app_login_login_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEd;AAEzC,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,kDAAS;KACrB;CACF,CAAC;IAMW,sBAAsB,SAAtB,sBAAsB;CAAG;AAAzB,sBAAsB;IAJlC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,sBAAsB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBM;AACM;AACmB;AAErB;AAEmB;AAEvB;IAY5B,eAAe,SAAf,eAAe;CAAG;AAAlB,eAAe;IAV3B,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,+DAAmB;YACnB,yEAAsB;SACvB;QACD,YAAY,EAAE,CAAC,kDAAS,CAAC;KAC1B,CAAC;GACW,eAAe,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBsB;AACmB;AAEd;AACd;AAC+B;IAQ3D,SAAS,SAAT,SAAS;IAWpB,YAAmB,QAAoB,EAAQ,WAAwB,EAAS,QAA6B,EAAU,MAAa;QAAjH,aAAQ,GAAR,QAAQ,CAAY;QAAQ,gBAAW,GAAX,WAAW,CAAa;QAAS,aAAQ,GAAR,QAAQ,CAAqB;QAAU,WAAM,GAAN,MAAM,CAAO;QATpI,cAAS,GAAc,IAAI,qDAAS,CAAC;YACnC,QAAQ,EAAE,IAAI,uDAAW,EAAE;YAC3B,QAAQ,EAAE,IAAI,uDAAW,EAAE;SAC5B,CAAC,CAAC;QAOD,IAAI,CAAC,IAAI,GAAE,SAAS,CAAC;IACvB,CAAC;IAED,QAAQ;QACN,oBAAoB;QACpB,wBAAwB;IAC1B,CAAC;IAEK,YAAY;;YAChB,IAAI,MAAM,CAAC;YACX,IAAI,KAAK,GAAC,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YACjC,IAAI,CAAC,QAAQ,GAAC,KAAK,CAAC,QAAQ,CAAC;YAC7B,IAAI,CAAC,QAAQ,GAAC,KAAK,CAAC,QAAQ,CAAC;YAC7B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC3B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAE3B,MAAM,GAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC;YAC3D,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;YACnB,IAAG,MAAM,IAAE,CAAC,EACV;gBACE,IAAI,CAAC,IAAI,GAAC,OAAO,CAAC;gBAClB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;gBAC1C,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,UAAU,EAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACzD,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,MAAM,EAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACrD,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,MAAM,EAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACjD;YAAA,CAAC;QACL,CAAC;KAAA;CAGJ;;YAnDQ,+DAAW;YAFX,uDAAW;YAIX,gFAAmB;YADnB,mDAAM;;AASF,SAAS;IALrB,wDAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,kEAAgC;;KAEjC,CAAC;GACW,SAAS,CAyCrB;AAzCqB","sources":["./src/app/login/login-routing.module.ts","./src/app/login/login.module.ts","./src/app/login/login.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { userInfo } from 'os';\nimport { MqttService } from '../services/mqtt.service';\nimport { Router } from '@angular/router';\nimport { LocalStorageService } from '../services/local-storage.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  ionicForm: FormGroup = new FormGroup({\n    userName: new FormControl(),\n    password: new FormControl()    \n  });\n  \n  mode : string;\n  username: string;\n  password: string;\n\n  constructor(public MQTTServ:MqttService,public formBuilder: FormBuilder ,public localSto: LocalStorageService, private router:Router) {   \n    this.mode =\"unknown\";\n  }\n\n  ngOnInit() {\n    //removing user name\n    //this.MQTTServ.Reset();\n  }\n\n  async onClickLogin() {\n    let number;\n    let local=(this.ionicForm.value);    \n    this.username=local.userName;\n    this.password=local.password;\n    console.log(this.username);    \n    console.log(this.password);\n    \n    number= this.MQTTServ.Connect(this.username, this.password)\n    console.log(number)\n    if(number==0)\n      {\n        this.mode=\"nurse\";\n        this.router.navigate(['/waiting-event/']);        \n        this.localSto.saveValuesString('username',this.username);\n        this.localSto.saveValuesString('mode',this.username);\n        this.localSto.saveValuesString('mode',this.mode);\n       };\n    }\n  \n\n}\n"],"names":[],"sourceRoot":"webpack:///"}