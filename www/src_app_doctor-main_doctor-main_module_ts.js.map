{"version":3,"file":"src_app_doctor-main_doctor-main_module_ts.js","mappings":"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","sources":["./src/app/doctor-main/doctor-main-routing.module.ts","./src/app/doctor-main/doctor-main.module.ts","./src/app/doctor-main/doctor-main.page.ts","./node_modules/@capacitor/app/dist/esm/definitions.js","./node_modules/@capacitor/app/dist/esm/index.js"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DoctorMainPage } from './doctor-main.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DoctorMainPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DoctorMainPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DoctorMainPageRoutingModule } from './doctor-main-routing.module';\n\nimport { DoctorMainPage } from './doctor-main.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    DoctorMainPageRoutingModule\n  ],\n  declarations: [DoctorMainPage]\n})\nexport class DoctorMainPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LocalStorageService } from '../services/local-storage.service';\nimport { Storage } from '@capacitor/storage';\nimport { UserService } from '../services/user.service';\nimport { User } from '../models/user';\nimport { Bed } from '../models/bed';\nimport { PacientsTable } from '../models/pacientsTable';\nimport { BedsService } from '../services/beds.service';\nimport { MessageModel } from '../models/message-model';\nimport { MqttService } from '../services/mqtt.service';\nimport { App } from '@capacitor/app';\n\n@Component({\n  selector: 'app-doctor-main',\n  templateUrl: './doctor-main.page.html',\n  styleUrls: ['./doctor-main.page.scss'],\n})\nexport class DoctorMainPage implements OnInit {\n  localDoctor: User= new User(0,\"\",\"\",\"\",\"\",0,\"\");\n  localBed: Bed = new Bed(0,0,0,0);\n  doctorId: number;\n  doctorName: string;\n  pacientNumber: number;\n  newMessage=false;\n  messages: Array<MessageModel> = new Array;\n  pacientTable: Array<PacientsTable> = new Array;\n  textResponse: string=\"\"  ;\n\n  constructor(private router:Router,\n    private activatedRoute: ActivatedRoute,\n    public localSto: LocalStorageService,\n    public bedlocal: BedsService,\n    public MQTTServ:MqttService,\n    public userServ: UserService\n    ) { \n    //this.doctorId = parseInt( this.activatedRoute.snapshot.paramMap.get(\"id\"));\n    this.doctorName=\"\";\n    \n  }\n\n  async ngOnInit() {\n   await this.getParams();\n   await this.getBeds();\n   \n    \n  }\n  onClickPacientNote(id:number){    \n    this.router.navigate(['/doctor-pacients/'+this.pacientNumber]);        \n  }\n  onClickMessages(){    \n    this.router.navigate(['/doctor-messages/'+this.doctorId]);        \n  }\n  /**\n   * Getting the parameters of the user from the local storage\n   */\n   async getParams() {\n    this.localDoctor=this.userServ.getUser();\n    this.doctorName = this.localDoctor.username;\n    \n   }\n   /***\n    * getting list of pacients and beds\n    */\n    \n    async getBeds() {\n   // console.log(\"Doctor logged:\"+this.localDoctor.username)    \n   // console.log(\"Doctor logged:\"+this.localDoctor.userId) \n    let  responseInfoTopic=\"/User/\"+this.localDoctor.userId+\"/Beds\";\n    await this.MQTTServ.MQTTClientLocal.subscribe(responseInfoTopic).on(Message=>{\n        let localMessage = JSON.parse(Message.string);\n        if(Message.toString()==\"Error\"){this.MQTTServ.MQTTClientLocal.unsubscribe(responseInfoTopic);}              \n        else{\n        //console.log(localMessage);\n        /*localMessage.forEach(element => {\n          this.pacientTable.push(element);\n        });*/\n        this.pacientTable=localMessage;\n        \n        this.MQTTServ.MQTTClientLocal.unsubscribe(responseInfoTopic)\n       // console.log(JSON.stringify(this.pacientTable=localMessage));\n       this.listenMessages();\n      }\n        \n      })    \n\n   // console.log(\"Doctor logged id:\"+this.localDoctor.userId)  \n    let a=new MessageModel(this.localDoctor.username,JSON.stringify(this.localDoctor.userId),  0, \"0\",9);    \n   // console.log(a)\n    let mqttmessage=JSON.stringify(a);\n   // console.log(mqttmessage);\n    let topic=\"/User/general\";\n    await this.MQTTServ.sendMesagge(topic, mqttmessage);\n  }\n\n  /**\n   * logout\n   */\n   logout(){\n    console.log(\"logging out\");\n    console.log(\"name:\"+this.localDoctor.username);\n   let question=\"logout\";\n      \n   let a=new MessageModel(this.localDoctor.username, question, 0, \"\",2);    \n   console.log(JSON.stringify(a));\n   let mqttmessage=(a).toString();\n  // console.log(mqttmessage);\n   let topic=\"/User/general\";\n   this.MQTTServ.sendMesagge(topic, JSON.stringify(a));  \n   \n   App.exitApp();   //this will close all services\n   //this.router.navigate(['/home/']);     \n   \n\n   \n  }\n  /**\n * go to general chat\n */\n   public goChat(){\n    /*   this.router.navigate(['/chat/]);        */\n    this.bedlocal.setBedId(0);\n    this.router.navigate(['/chat/']);        \n      }\n\n  \n\n  /**\n * \n * @param topic this will subscribe to a general messaging stack\n */\n    public async listenMessages(){\n   // console.log(\"El usuario es:\"+this.localDoctor.userId)\n    console.log(\"escuchando\")\n    console.log(\"aqui:\"+this.pacientTable.length)\n    let topic=\"/User/\"+this.localDoctor.userId+\"/questions/\";\n\n    this.pacientTable.forEach(element => {\n    //console.log(JSON.stringify(element)) ; \n    topic=\"/User/\"+this.localDoctor.userId+\"/questions/\"+element.pacientId;\n    console.log(\"topic: \"+topic)    \n    this.MQTTServ.MQTTClientLocal.subscribe(topic).on(Message=>{\n        let localMessage = JSON.parse(Message.string);\n        if(Message.toString()==\"Error\"){this.MQTTServ.MQTTClientLocal.unsubscribe(topic+\"#\");}      \n        //console.log(\"respuestaSystem2:  \"+localMessage[0].lastName);\n        console.log(\"here doc listening\");\n        \n        \n            \n        let receivedMessage = new MessageModel(localMessage._username,localMessage._content,localMessage._bedId,localMessage._time,localMessage._type);\n          console.log(\"Recibido por doc\");\n          \n          this.messages.push(receivedMessage);    \n          this.newMessage=true;          \n      })\n      \n    });\n    \n   \n  }\n\n  onChangeText(text:string){\n    this.textResponse=text;\n    //console.log(this.textResponse);\n  }\n\n  sendResponseText(id:number){\n    //console.log((this.pacientTable[id].pacientId));\n    let topic=\"/User/\"+this.localDoctor.userId+\"/answers/\"+this.pacientTable[id].pacientId;\n    console.log(topic);\n    let a=new MessageModel(this.localDoctor.username,this.textResponse,  this.pacientTable[id].bedId, \"0\",7);    \n    let mqttmessage=JSON.stringify(a);\n    console.log(\"sending:\",mqttmessage);    \n    this.MQTTServ.sendMesagge(topic, mqttmessage);  \n    this.messages.splice(id,1);  \n  }\n  sendAudioText(response:string, id:number){\n    let topic=\"/User/\"+this.localDoctor.userId+\"/answers/\"+this.pacientTable[id].pacientId;\n    let a=new MessageModel(this.localDoctor.username,response,  this.pacientTable[id].bedId, \"0\",27);    \n    let mqttmessage=JSON.stringify(a);    \n    this.MQTTServ.sendMesagge(topic, mqttmessage);\n  }\n\n  upgradingPacientNumber(id:number){\n    this.pacientNumber=id;\n  }\n\n}\n","export {};\n","import { registerPlugin } from '@capacitor/core';\nconst App = registerPlugin('App', {\n    web: () => import('./web').then(m => new m.AppWeb()),\n});\nexport * from './definitions';\nexport { App };\n"],"names":[],"sourceRoot":"webpack:///"}