{"version":3,"file":"src_app_doctor-main_doctor-main_module_ts.js","mappings":"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","sources":["./src/app/doctor-main/doctor-main-routing.module.ts","./src/app/doctor-main/doctor-main.module.ts","./src/app/doctor-main/doctor-main.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DoctorMainPage } from './doctor-main.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DoctorMainPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DoctorMainPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DoctorMainPageRoutingModule } from './doctor-main-routing.module';\n\nimport { DoctorMainPage } from './doctor-main.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    DoctorMainPageRoutingModule\n  ],\n  declarations: [DoctorMainPage]\n})\nexport class DoctorMainPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LocalStorageService } from '../services/local-storage.service';\nimport { Storage } from '@capacitor/storage';\nimport { UserService } from '../services/user.service';\nimport { User } from '../models/user';\nimport { Bed } from '../models/bed';\nimport { BedsService } from '../services/beds.service';\nimport { MessageModel } from '../models/message-model';\nimport { MqttService } from '../services/mqtt.service';\n\n@Component({\n  selector: 'app-doctor-main',\n  templateUrl: './doctor-main.page.html',\n  styleUrls: ['./doctor-main.page.scss'],\n})\nexport class DoctorMainPage implements OnInit {\n  localDoctor: User= new User(0,\"\",\"\",\"\",\"\",0,\"\");\n  localBed: Bed = new Bed(0,0,0,0);\n  doctorId: number;\n  doctorName: string;\n  constructor(private router:Router,\n    private activatedRoute: ActivatedRoute,\n    public localSto: LocalStorageService,\n    public bedlocal: BedsService,\n    public MQTTServ:MqttService,\n    public userServ: UserService\n    ) { \n    //this.doctorId = parseInt( this.activatedRoute.snapshot.paramMap.get(\"id\"));\n    this.doctorName=\"\";\n    \n  }\n\n  ngOnInit() {\n    this.getParams();\n    this.getBeds();\n    \n  }\n  onClickPacientNote(id:number){    \n    this.router.navigate(['/doctor-pacients/'+this.doctorId]);        \n  }\n  onClickMessages(){    \n    this.router.navigate(['/doctor-messages/'+this.doctorId]);        \n  }\n  /**\n   * Getting the parameters of the user from the local storage\n   */\n   async getParams() {\n    this.localDoctor=this.userServ.getUser();\n    this.doctorName = this.localDoctor.username;\n    console.log(\"Doctor logged:\"+this.localDoctor.username)\n    /*let { value } = await Storage.get({ key: 'username' });      \n    this.doctorName=value.toString();\n    console.log(this.doctorName);*/\n   }\n    //getting list of pacients and beds\n    async getBeds() {\n      console.log(\"Doctor logged id:\"+this.localDoctor.userId)  \n    let a=new MessageModel(this.doctorName,JSON.stringify(this.localDoctor.username),  0, \"0\",9);    \n    console.log(a)\n    let mqttmessage=JSON.stringify(a);\n    console.log(mqttmessage);\n    let topic=\"/User/general\";\n    await this.MQTTServ.sendMesagge(topic, mqttmessage);\n\n  }\n\n  /**\n   * logout\n   */\n   logout(){\n    console.log(\"logging out\");\n    console.log(\"name:\"+this.localDoctor.username);\n   let question=\"logout\";\n      \n   let a=new MessageModel(this.localDoctor.username, question, 0, \"\",2);    \n   console.log(JSON.stringify(a));\n   let mqttmessage=(a).toString();\n   console.log(mqttmessage);\n   let topic=\"/User/general\";\n   this.MQTTServ.sendMesagge(topic, JSON.stringify(a));  \n   \n   \n     this.router.navigate(['/home/']);        \n\n   \n  }\n  /**\n * go to general chat\n */\n   public goChat(){\n    /*   this.router.navigate(['/chat/]);        */\n    this.bedlocal.setBedId(0);\n    this.router.navigate(['/chat/']);        \n      }\n\n}\n"],"names":[],"sourceRoot":"webpack:///"}